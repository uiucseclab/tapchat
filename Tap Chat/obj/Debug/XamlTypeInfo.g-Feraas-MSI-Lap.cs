//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Tap_Chat
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace Tap_Chat.Tap_Chat_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[25];
            _typeNameTable[0] = "Tap_Chat.AddFriendPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Tap_Chat.Common.NavigationHelper";
            _typeNameTable[4] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[5] = "Tap_Chat.Common.ObservableDictionary";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "Tap_Chat.ChatPage";
            _typeNameTable[9] = "Tap_Chat.LoginPage";
            _typeNameTable[10] = "Tap_Chat.MainPage";
            _typeNameTable[11] = "Tap_Chat.ViewModel.FriendsViewModel";
            _typeNameTable[12] = "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendsListEntry>";
            _typeNameTable[13] = "System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendsListEntry>";
            _typeNameTable[14] = "Tap_Chat.ViewModel.FriendsListEntry";
            _typeNameTable[15] = "Boolean";
            _typeNameTable[16] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[17] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[18] = "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendRequest>";
            _typeNameTable[19] = "System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendRequest>";
            _typeNameTable[20] = "Tap_Chat.ViewModel.FriendRequest";
            _typeNameTable[21] = "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.ChatEntry>";
            _typeNameTable[22] = "System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.ChatEntry>";
            _typeNameTable[23] = "Tap_Chat.ViewModel.ChatEntry";
            _typeNameTable[24] = "Tap_Chat.SignUpPage";

            _typeTable = new global::System.Type[25];
            _typeTable[0] = typeof(global::Tap_Chat.AddFriendPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::Tap_Chat.Common.NavigationHelper);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[5] = typeof(global::Tap_Chat.Common.ObservableDictionary);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::Tap_Chat.ChatPage);
            _typeTable[9] = typeof(global::Tap_Chat.LoginPage);
            _typeTable[10] = typeof(global::Tap_Chat.MainPage);
            _typeTable[11] = typeof(global::Tap_Chat.ViewModel.FriendsViewModel);
            _typeTable[12] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendsListEntry>);
            _typeTable[13] = typeof(global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.FriendsListEntry>);
            _typeTable[14] = typeof(global::Tap_Chat.ViewModel.FriendsListEntry);
            _typeTable[15] = typeof(global::System.Boolean);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[18] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendRequest>);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.FriendRequest>);
            _typeTable[20] = typeof(global::Tap_Chat.ViewModel.FriendRequest);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.ChatEntry>);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.ChatEntry>);
            _typeTable[23] = typeof(global::Tap_Chat.ViewModel.ChatEntry);
            _typeTable[24] = typeof(global::Tap_Chat.SignUpPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AddFriendPage() { return new global::Tap_Chat.AddFriendPage(); }
        private object Activate_5_ObservableDictionary() { return new global::Tap_Chat.Common.ObservableDictionary(); }
        private object Activate_8_ChatPage() { return new global::Tap_Chat.ChatPage(); }
        private object Activate_9_LoginPage() { return new global::Tap_Chat.LoginPage(); }
        private object Activate_10_MainPage() { return new global::Tap_Chat.MainPage(); }
        private object Activate_11_FriendsViewModel() { return new global::Tap_Chat.ViewModel.FriendsViewModel(); }
        private object Activate_12_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendsListEntry>(); }
        private object Activate_13_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.FriendsListEntry>(); }
        private object Activate_14_FriendsListEntry() { return new global::Tap_Chat.ViewModel.FriendsListEntry(); }
        private object Activate_18_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendRequest>(); }
        private object Activate_19_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.FriendRequest>(); }
        private object Activate_20_FriendRequest() { return new global::Tap_Chat.ViewModel.FriendRequest(); }
        private object Activate_21_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.ChatEntry>(); }
        private object Activate_22_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Tap_Chat.ViewModel.ChatEntry>(); }
        private object Activate_23_ChatEntry() { return new global::Tap_Chat.ViewModel.ChatEntry(); }
        private object Activate_24_SignUpPage() { return new global::Tap_Chat.SignUpPage(); }
        private void MapAdd_5_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_12_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.FriendsListEntry>)instance;
            var newItem = (global::Tap_Chat.ViewModel.FriendsListEntry)item;
            collection.Add(newItem);
        }
        private void VectorAdd_13_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.FriendsListEntry>)instance;
            var newItem = (global::Tap_Chat.ViewModel.FriendsListEntry)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.FriendRequest>)instance;
            var newItem = (global::Tap_Chat.ViewModel.FriendRequest)item;
            collection.Add(newItem);
        }
        private void VectorAdd_19_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.FriendRequest>)instance;
            var newItem = (global::Tap_Chat.ViewModel.FriendRequest)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.ChatEntry>)instance;
            var newItem = (global::Tap_Chat.ViewModel.ChatEntry)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Tap_Chat.ViewModel.ChatEntry>)instance;
            var newItem = (global::Tap_Chat.ViewModel.ChatEntry)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Tap_Chat.AddFriendPage
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_AddFriendPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Tap_Chat.Common.NavigationHelper
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Tap_Chat.Common.ObservableDictionary
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_5_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  String
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Tap_Chat.ChatPage
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_ChatPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  Tap_Chat.LoginPage
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_9_LoginPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  Tap_Chat.MainPage
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_MainPage;
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Tap_Chat.ViewModel.FriendsViewModel
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_FriendsViewModel;
                userType.AddMemberName("friendsList");
                userType.AddMemberName("friendRequests");
                userType.AddMemberName("chatHistory");
                userType.AddMemberName("myKey");
                userType.AddMemberName("friendsKey");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendsListEntry>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendsListEntry>"));
                userType.CollectionAdd = VectorAdd_12_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendsListEntry>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_Collection;
                userType.CollectionAdd = VectorAdd_13_Collection;
                xamlType = userType;
                break;

            case 14:   //  Tap_Chat.ViewModel.FriendsListEntry
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_FriendsListEntry;
                userType.AddMemberName("username");
                userType.AddMemberName("isOnline");
                userType.AddMemberName("onlineStatusColor");
                userType.AddMemberName("showChatButtons");
                userType.AddMemberName("unreadCount");
                userType.AddMemberName("unreadCountVisibility");
                userType.AddMemberName("chatButtonsVisible");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Boolean
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendRequest>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendRequest>"));
                userType.CollectionAdd = VectorAdd_18_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.FriendRequest>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_Collection;
                userType.CollectionAdd = VectorAdd_19_Collection;
                xamlType = userType;
                break;

            case 20:   //  Tap_Chat.ViewModel.FriendRequest
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_FriendRequest;
                userType.AddMemberName("username");
                userType.AddMemberName("showRequestButtons");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.ChatEntry>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.ChatEntry>"));
                userType.CollectionAdd = VectorAdd_21_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.Collection`1<Tap_Chat.ViewModel.ChatEntry>
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_Collection;
                userType.CollectionAdd = VectorAdd_22_Collection;
                xamlType = userType;
                break;

            case 23:   //  Tap_Chat.ViewModel.ChatEntry
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_ChatEntry;
                userType.AddMemberName("sender");
                userType.AddMemberName("message");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Tap_Chat.SignUpPage
                userType = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_SignUpPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_AddFriendPage_NavigationHelper(object instance)
        {
            var that = (global::Tap_Chat.AddFriendPage)instance;
            return that.NavigationHelper;
        }
        private object get_1_AddFriendPage_DefaultViewModel(object instance)
        {
            var that = (global::Tap_Chat.AddFriendPage)instance;
            return that.DefaultViewModel;
        }
        private object get_2_ChatPage_NavigationHelper(object instance)
        {
            var that = (global::Tap_Chat.ChatPage)instance;
            return that.NavigationHelper;
        }
        private object get_3_ChatPage_DefaultViewModel(object instance)
        {
            var that = (global::Tap_Chat.ChatPage)instance;
            return that.DefaultViewModel;
        }
        private object get_4_LoginPage_NavigationHelper(object instance)
        {
            var that = (global::Tap_Chat.LoginPage)instance;
            return that.NavigationHelper;
        }
        private object get_5_LoginPage_DefaultViewModel(object instance)
        {
            var that = (global::Tap_Chat.LoginPage)instance;
            return that.DefaultViewModel;
        }
        private object get_6_MainPage_NavigationHelper(object instance)
        {
            var that = (global::Tap_Chat.MainPage)instance;
            return that.NavigationHelper;
        }
        private object get_7_FriendsViewModel_friendsList(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            return that.friendsList;
        }
        private void set_7_FriendsViewModel_friendsList(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            that.friendsList = (global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendsListEntry>)Value;
        }
        private object get_8_FriendsListEntry_username(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.username;
        }
        private void set_8_FriendsListEntry_username(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.username = (global::System.String)Value;
        }
        private object get_9_FriendsListEntry_isOnline(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.isOnline;
        }
        private void set_9_FriendsListEntry_isOnline(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.isOnline = (global::System.Boolean)Value;
        }
        private object get_10_FriendsListEntry_onlineStatusColor(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.onlineStatusColor;
        }
        private void set_10_FriendsListEntry_onlineStatusColor(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.onlineStatusColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_11_FriendsListEntry_showChatButtons(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.showChatButtons;
        }
        private void set_11_FriendsListEntry_showChatButtons(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.showChatButtons = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_12_FriendsListEntry_unreadCount(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.unreadCount;
        }
        private void set_12_FriendsListEntry_unreadCount(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.unreadCount = (global::System.String)Value;
        }
        private object get_13_FriendsListEntry_unreadCountVisibility(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.unreadCountVisibility;
        }
        private void set_13_FriendsListEntry_unreadCountVisibility(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.unreadCountVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_14_FriendsListEntry_chatButtonsVisible(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            return that.chatButtonsVisible;
        }
        private void set_14_FriendsListEntry_chatButtonsVisible(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsListEntry)instance;
            that.chatButtonsVisible = (global::System.Boolean)Value;
        }
        private object get_15_FriendsViewModel_friendRequests(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            return that.friendRequests;
        }
        private void set_15_FriendsViewModel_friendRequests(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            that.friendRequests = (global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.FriendRequest>)Value;
        }
        private object get_16_FriendRequest_username(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendRequest)instance;
            return that.username;
        }
        private void set_16_FriendRequest_username(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendRequest)instance;
            that.username = (global::System.String)Value;
        }
        private object get_17_FriendRequest_showRequestButtons(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendRequest)instance;
            return that.showRequestButtons;
        }
        private void set_17_FriendRequest_showRequestButtons(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendRequest)instance;
            that.showRequestButtons = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_18_FriendsViewModel_chatHistory(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            return that.chatHistory;
        }
        private void set_18_FriendsViewModel_chatHistory(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            that.chatHistory = (global::System.Collections.ObjectModel.ObservableCollection<global::Tap_Chat.ViewModel.ChatEntry>)Value;
        }
        private object get_19_ChatEntry_sender(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.ChatEntry)instance;
            return that.sender;
        }
        private void set_19_ChatEntry_sender(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.ChatEntry)instance;
            that.sender = (global::System.String)Value;
        }
        private object get_20_ChatEntry_message(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.ChatEntry)instance;
            return that.message;
        }
        private void set_20_ChatEntry_message(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.ChatEntry)instance;
            that.message = (global::System.String)Value;
        }
        private object get_21_FriendsViewModel_myKey(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            return that.myKey;
        }
        private void set_21_FriendsViewModel_myKey(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            that.myKey = (global::System.String)Value;
        }
        private object get_22_FriendsViewModel_friendsKey(object instance)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            return that.friendsKey;
        }
        private void set_22_FriendsViewModel_friendsKey(object instance, object Value)
        {
            var that = (global::Tap_Chat.ViewModel.FriendsViewModel)instance;
            that.friendsKey = (global::System.String)Value;
        }
        private object get_23_SignUpPage_NavigationHelper(object instance)
        {
            var that = (global::Tap_Chat.SignUpPage)instance;
            return that.NavigationHelper;
        }
        private object get_24_SignUpPage_DefaultViewModel(object instance)
        {
            var that = (global::Tap_Chat.SignUpPage)instance;
            return that.DefaultViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember xamlMember = null;
            global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Tap_Chat.AddFriendPage.NavigationHelper":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.AddFriendPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Tap_Chat.Common.NavigationHelper");
                xamlMember.Getter = get_0_AddFriendPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.AddFriendPage.DefaultViewModel":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.AddFriendPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Tap_Chat.Common.ObservableDictionary");
                xamlMember.Getter = get_1_AddFriendPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.ChatPage.NavigationHelper":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ChatPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Tap_Chat.Common.NavigationHelper");
                xamlMember.Getter = get_2_ChatPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.ChatPage.DefaultViewModel":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ChatPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Tap_Chat.Common.ObservableDictionary");
                xamlMember.Getter = get_3_ChatPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.LoginPage.NavigationHelper":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.LoginPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Tap_Chat.Common.NavigationHelper");
                xamlMember.Getter = get_4_LoginPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.LoginPage.DefaultViewModel":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.LoginPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Tap_Chat.Common.ObservableDictionary");
                xamlMember.Getter = get_5_LoginPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.MainPage.NavigationHelper":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.MainPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Tap_Chat.Common.NavigationHelper");
                xamlMember.Getter = get_6_MainPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.ViewModel.FriendsViewModel.friendsList":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsViewModel");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "friendsList", "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendsListEntry>");
                xamlMember.Getter = get_7_FriendsViewModel_friendsList;
                xamlMember.Setter = set_7_FriendsViewModel_friendsList;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.username":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "username", "String");
                xamlMember.Getter = get_8_FriendsListEntry_username;
                xamlMember.Setter = set_8_FriendsListEntry_username;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.isOnline":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "isOnline", "Boolean");
                xamlMember.Getter = get_9_FriendsListEntry_isOnline;
                xamlMember.Setter = set_9_FriendsListEntry_isOnline;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.onlineStatusColor":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "onlineStatusColor", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_10_FriendsListEntry_onlineStatusColor;
                xamlMember.Setter = set_10_FriendsListEntry_onlineStatusColor;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.showChatButtons":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "showChatButtons", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_11_FriendsListEntry_showChatButtons;
                xamlMember.Setter = set_11_FriendsListEntry_showChatButtons;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.unreadCount":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "unreadCount", "String");
                xamlMember.Getter = get_12_FriendsListEntry_unreadCount;
                xamlMember.Setter = set_12_FriendsListEntry_unreadCount;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.unreadCountVisibility":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "unreadCountVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_13_FriendsListEntry_unreadCountVisibility;
                xamlMember.Setter = set_13_FriendsListEntry_unreadCountVisibility;
                break;
            case "Tap_Chat.ViewModel.FriendsListEntry.chatButtonsVisible":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsListEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "chatButtonsVisible", "Boolean");
                xamlMember.Getter = get_14_FriendsListEntry_chatButtonsVisible;
                xamlMember.Setter = set_14_FriendsListEntry_chatButtonsVisible;
                break;
            case "Tap_Chat.ViewModel.FriendsViewModel.friendRequests":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsViewModel");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "friendRequests", "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.FriendRequest>");
                xamlMember.Getter = get_15_FriendsViewModel_friendRequests;
                xamlMember.Setter = set_15_FriendsViewModel_friendRequests;
                break;
            case "Tap_Chat.ViewModel.FriendRequest.username":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendRequest");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "username", "String");
                xamlMember.Getter = get_16_FriendRequest_username;
                xamlMember.Setter = set_16_FriendRequest_username;
                break;
            case "Tap_Chat.ViewModel.FriendRequest.showRequestButtons":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendRequest");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "showRequestButtons", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_17_FriendRequest_showRequestButtons;
                xamlMember.Setter = set_17_FriendRequest_showRequestButtons;
                break;
            case "Tap_Chat.ViewModel.FriendsViewModel.chatHistory":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsViewModel");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "chatHistory", "System.Collections.ObjectModel.ObservableCollection`1<Tap_Chat.ViewModel.ChatEntry>");
                xamlMember.Getter = get_18_FriendsViewModel_chatHistory;
                xamlMember.Setter = set_18_FriendsViewModel_chatHistory;
                break;
            case "Tap_Chat.ViewModel.ChatEntry.sender":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.ChatEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "sender", "String");
                xamlMember.Getter = get_19_ChatEntry_sender;
                xamlMember.Setter = set_19_ChatEntry_sender;
                break;
            case "Tap_Chat.ViewModel.ChatEntry.message":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.ChatEntry");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "message", "String");
                xamlMember.Getter = get_20_ChatEntry_message;
                xamlMember.Setter = set_20_ChatEntry_message;
                break;
            case "Tap_Chat.ViewModel.FriendsViewModel.myKey":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsViewModel");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "myKey", "String");
                xamlMember.Getter = get_21_FriendsViewModel_myKey;
                xamlMember.Setter = set_21_FriendsViewModel_myKey;
                break;
            case "Tap_Chat.ViewModel.FriendsViewModel.friendsKey":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.ViewModel.FriendsViewModel");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "friendsKey", "String");
                xamlMember.Getter = get_22_FriendsViewModel_friendsKey;
                xamlMember.Setter = set_22_FriendsViewModel_friendsKey;
                break;
            case "Tap_Chat.SignUpPage.NavigationHelper":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.SignUpPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Tap_Chat.Common.NavigationHelper");
                xamlMember.Getter = get_23_SignUpPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Tap_Chat.SignUpPage.DefaultViewModel":
                userType = (global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tap_Chat.SignUpPage");
                xamlMember = new global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Tap_Chat.Common.ObservableDictionary");
                xamlMember.Getter = get_24_SignUpPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlSystemBaseType
    {
        global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Tap_Chat.Tap_Chat_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


